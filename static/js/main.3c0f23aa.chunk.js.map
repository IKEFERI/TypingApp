{"version":3,"sources":["redux/types.js","redux/actions.js","components/Accuracy.jsx","components/Speedometer.jsx","hooks/useInterval.js","assets/handskeyword.png","components/dialogs/StartDialog.jsx","components/dialogs/DifficultDialog.jsx","components/dialogs/KeyLayoutDialog.jsx","components/dialogs/FinalDialog.jsx","components/Dialogs.jsx","components/ResultsTable.jsx","components/Preloader.jsx","components/Char.jsx","components/FetchedText.jsx","components/Text.jsx","components/CustomAlert.jsx","components/Hints.jsx","components/Title.jsx","App.js","reportWebVitals.js","redux/sagas.js","redux/appReducer.js","redux/store.js","index.js"],"names":["FETCH_TEXT","REQUEST_TEXT","SHOW_ALERT","HIDE_ALERT","SHOW_LOADER","HIDE_LOADER","SET_PASSED_CHAR","SET_CURRENT_CHAR","SET_ERRORED_CHAR","SET_COUNT_ERRORS","SET_ALL_CHARS","SET_ACCURACY","SET_SPEED","SET_START_GAME","SET_DIFFICULTY_GAME","LAYOUT_KEY_CHECK","hideLoader","type","setErroredChar","key","layoutKeyCheck","bool","resetGame","setDifficultyGame","difficult","Accuracy","dispatch","useDispatch","countErrors","useSelector","state","appState","erroredChar","accuracy","allChars","useEffect","numb","console","log","newAccuracy","Math","round","percent","Grid","item","xs","sm","Paper","style","padding","Typography","fontSize","fontWeight","Speedometer","useState","Date","getTime","startTime","setStartTime","updateTime","setUpdateTime","passedChar","currentChar","speed","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","speedCalc","setSpeed","numSec","StartDialog","handleClose","open","classes","Dialog","disableEscapeKeyDown","DialogTitle","onClose","DialogContent","dividers","Box","className","image","src","instructionImg","aspectRatio","gutterBottom","DialogActions","Button","autoFocus","onClick","color","GreenButton","experimentalStyled","theme","palette","getContrastText","green","backgroundColor","PurpleButton","purple","RedButton","red","DifficultDialog","variant","margin","KeyLayoutDialog","FinalDialog","finalSpeed","setFinalSpeed","resultTextAll","title","text","button","resultTextOutput","setResultTextOutput","results","JSON","parse","localStorage","getItem","difficultyGame","setResultWithHandleClose","errors","newResults","difficultToText","setItem","stringify","setResults","useStyles","makeStyles","marginBottom","Dialogs","startDialog","difficultDialog","finalDialog","keyLayoutDialog","setOpen","toggleModal","modal","prev","reset","table","minWidth","row","hideLastBorder","border","ResultsTable","TableContainer","component","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","index","scope","reverse","Preloader","LinearProgress","passed","next","borderRadius","errored","Char","char","setClassName","FetchedText","fetchedText","toString","difficulty","showLoader","length","keyPressedListener","e","keyPressed","code","match","checkKeyboard","keyPressedEqualToText","setCurrentChar","document","addEventListener","removeEventListener","split","indexChar","fetchTextContainer","lineHeight","letterSpacing","paper","actionList","textAlign","marginTop","Text","isFetching","tabIndex","disabled","activeElement","blur","commonAlert","minHeight","display","alignItems","CustomAlert","severity","Alert","Hints","showAlert","HintsContainer","h1","Title","root","App","input","StyledEngineProvider","injectFirst","focus","position","left","ref","Container","maxWidth","container","spacing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","sagaWatcher","sagaWorker","takeEvery","action","put","call","fetchText","payload","a","fetch","response","json","initialState","appReducer","saga","createSagaMiddleWare","reducers","combineReducers","enhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","run","app","StrictMode","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3c0f23aa.chunk.js","sourcesContent":["export const FETCH_TEXT = 'FETCH_TEXT';\r\nexport const REQUEST_TEXT = 'REQUEST_TEXT';\r\nexport const SHOW_ALERT = 'SHOW_ALERT';\r\nexport const HIDE_ALERT = 'HIDE_ALERT';\r\nexport const SHOW_LOADER = 'SHOW_LOADER';\r\nexport const HIDE_LOADER = 'HIDE_LOADER';\r\nexport const SET_PASSED_CHAR = 'SET_PASSED_CHAR';\r\nexport const SET_CURRENT_CHAR = 'SET_CURRENT_CHAR';\r\nexport const SET_ERRORED_CHAR = 'SET_ERRORED_CHAR';\r\nexport const SET_COUNT_ERRORS = 'SET_COUNT_ERRORS';\r\nexport const SET_ALL_CHARS = 'SET_ALL_CHARS';\r\nexport const SET_ACCURACY = 'SET_ACCURACY';\r\nexport const SET_SPEED = 'SET_SPEED';\r\nexport const SET_START_GAME = 'SET_START_GAME';\r\nexport const SET_DIFFICULTY_GAME = 'SET_DIFFICULTY_GAME';\r\nexport const LAYOUT_KEY_CHECK = 'LAYOUT_KEY_CHECK';","import {\r\n    HIDE_LOADER, LAYOUT_KEY_CHECK,\r\n    REQUEST_TEXT, SET_ACCURACY, SET_ALL_CHARS, SET_COUNT_ERRORS, SET_CURRENT_CHAR, SET_DIFFICULTY_GAME,\r\n    SET_ERRORED_CHAR,\r\n    SET_PASSED_CHAR, SET_SPEED, SET_START_GAME,\r\n    SHOW_ALERT,\r\n    SHOW_LOADER\r\n} from \"./types\";\r\n\r\nexport function fetchText(difficult) {\r\n    return {type: REQUEST_TEXT, difficult}\r\n}\r\n\r\nexport function showLoader() {\r\n    return {type: SHOW_LOADER}\r\n}\r\n\r\nexport function hideLoader() {\r\n    return {type: HIDE_LOADER}\r\n}\r\n\r\nexport function showAlert() {\r\n    return {type: SHOW_ALERT}\r\n}\r\n\r\nexport function setErroredChar(key) {\r\n    return {type: SET_ERRORED_CHAR, key}\r\n}\r\n\r\nexport function setCurrentChar(key) {\r\n    return {type: SET_CURRENT_CHAR, key}\r\n}\r\n\r\nexport function setPassedChar(key) {\r\n    return {type: SET_PASSED_CHAR, key}\r\n}\r\n\r\nexport function setCountErrors(numb) {\r\n    return {type: SET_COUNT_ERRORS, numb}\r\n}\r\n\r\nexport function setAllChars(numb) {\r\n    return {type: SET_ALL_CHARS, numb}\r\n}\r\n\r\nexport function setAccuracy(percent) {\r\n    return {type: SET_ACCURACY, percent}\r\n}\r\n\r\nexport function setSpeed(speed) {\r\n    return {type: SET_SPEED, speed}\r\n}\r\n\r\nexport function layoutKeyCheck(bool) {\r\n    return {type: LAYOUT_KEY_CHECK, bool}\r\n}\r\n\r\nexport function resetGame() {\r\n    return {type: SET_START_GAME}\r\n}\r\n\r\nexport function setDifficultyGame(difficult) {\r\n    return {type: SET_DIFFICULTY_GAME, difficult}\r\n}","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setAccuracy, setCountErrors} from \"../redux/actions\";\r\nimport {Grid, Paper, Typography} from \"@material-ui/core\";\r\n\r\nconst Accuracy = () => {\r\n    const dispatch = useDispatch();\r\n    const countErrors = useSelector(state => state.appState.countErrors);\r\n    const erroredChar = useSelector(state => state.appState.erroredChar);\r\n    const accuracy = useSelector(state => state.appState.accuracy);\r\n    const allChars = useSelector(state => state.appState.allChars);\r\n\r\n    useEffect(() => {\r\n        if (erroredChar) {\r\n            dispatch(setCountErrors(countErrors + 1));\r\n            console.log('Errors:', countErrors, erroredChar);\r\n        }\r\n    }, [erroredChar]);\r\n\r\n    useEffect(() => {\r\n        const newAccuracy = (1000 - Math.round(1000 * countErrors / allChars)) / 10;\r\n        if (newAccuracy) {\r\n            dispatch(setAccuracy(newAccuracy));\r\n        }\r\n    }, [countErrors]);\r\n\r\n    return (\r\n        <>\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper style={{padding: \"24px\"}}>\r\n                    <Typography style={{fontSize: '24px', fontWeight: 600}}>Точность: {accuracy}%</Typography>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper style={{padding: \"24px\"}}>\r\n                    <Typography style={{fontSize: '24px', fontWeight: 600}}>Ошибки: {countErrors}</Typography>\r\n                </Paper>\r\n            </Grid>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default Accuracy;","import React, {useEffect, useState} from 'react';\r\nimport {Grid, Paper, Typography} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport useInterval from \"../hooks/useInterval\";\r\nimport {setSpeed} from \"../redux/actions\";\r\n\r\nconst Speedometer = () => {\r\n    const dispatch = useDispatch();\r\n    const [startTime, setStartTime] = useState((new Date).getTime());\r\n    const [updateTime, setUpdateTime] = useState((new Date).getTime());\r\n    const passedChar = useSelector(state => state.appState.passedChar);\r\n    const currentChar = useSelector(state => state.appState.currentChar);\r\n    const speed = useSelector(state => state.appState.speed);\r\n    const numSec = 1;\r\n\r\n    useEffect(() => {\r\n        if (currentChar === 1) {\r\n            setStartTime((new Date).getTime());\r\n        }\r\n    }, [currentChar]);\r\n\r\n    useInterval(() => {\r\n        setUpdateTime(((new Date).getTime() - startTime) / 1000);\r\n        const speedCalc = Math.round(passedChar / updateTime * 60);\r\n        dispatch(setSpeed(speedCalc));\r\n    }, numSec * 1000);\r\n\r\n    return (\r\n        <Grid item xs={12} sm={4}>\r\n            <Paper style={{padding: \"24px\"}}>\r\n                <Typography style={{fontSize: '24px', fontWeight: 600}}>\r\n                    Зн./мин.: {speed}\r\n                </Typography>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Speedometer;","import {useEffect, useRef} from \"react\";\r\n\r\nexport default function useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current();\r\n        }\r\n\r\n        if (delay !== null) {\r\n            let id = setInterval(tick, delay);\r\n            return () => clearInterval(id);\r\n        }\r\n\r\n    }, [delay]);\r\n}","export default __webpack_public_path__ + \"static/media/handskeyword.8715008e.png\";","import Dialog from \"@material-ui/core/Dialog\";\r\nimport {Box, DialogActions, DialogContent, DialogTitle} from \"@material-ui/core\";\r\nimport Image from \"material-ui-image\";\r\nimport instructionImg from \"../../assets/handskeyword.png\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React from \"react\";\r\n\r\nconst StartDialog = ({handleClose, open, classes}) => {\r\n    return (\r\n        <Dialog disableEscapeKeyDown open={open}>\r\n            <DialogTitle onClose={handleClose}>\r\n                Немного о положении рук\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                <Box className={classes.image}>\r\n                    <Image\r\n                        src={instructionImg}\r\n                        aspectRatio={(16 / 9)}\r\n                    />\r\n                </Box>\r\n                <Typography gutterBottom style={{fontSize: '18px'}}>\r\n                    Прежде чем начать, обрати внимание на картинку. Каждой зоне твоей клавиатуры, соответствуют пальцы\r\n                    твоих рук. Нащупай указательными пальцами метки на кнопках клавиатуры - F и J. Так ты сможешь\r\n                    в слепую выбирать правильное положение пальцев.\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                    Поехали!\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n    );\r\n}\r\nexport default StartDialog;","import {Box, DialogContent, DialogTitle, experimentalStyled} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {green, purple, red} from \"@material-ui/core/colors\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setDifficultyGame} from \"../../redux/actions\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport React from \"react\";\r\n\r\nconst GreenButton = experimentalStyled(Button)(({theme}) => ({\r\n    color: theme.palette.getContrastText(green[800]),\r\n    backgroundColor: green[800],\r\n    '&:hover': {\r\n        backgroundColor: green[900],\r\n    },\r\n}));\r\n\r\nconst PurpleButton = experimentalStyled(Button)(({theme}) => ({\r\n    color: theme.palette.getContrastText(purple[500]),\r\n    backgroundColor: purple[500],\r\n    '&:hover': {\r\n        backgroundColor: purple[700],\r\n    },\r\n}));\r\n\r\nconst RedButton = experimentalStyled(Button)(({theme}) => ({\r\n    color: theme.palette.getContrastText(red[500]),\r\n    backgroundColor: red[500],\r\n    '&:hover': {\r\n        backgroundColor: red[700],\r\n    },\r\n}));\r\n\r\n\r\nconst DifficultDialog = ({handleClose, open, classes}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const setEasyDifficult = () => {\r\n        dispatch(setDifficultyGame(1));\r\n        handleClose();\r\n    }\r\n    const setNormalDifficult = () => {\r\n        dispatch(setDifficultyGame(4));\r\n        handleClose();\r\n    }\r\n    const setHardDifficult = () => {\r\n        dispatch(setDifficultyGame(8));\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <Dialog disableEscapeKeyDown open={open}>\r\n            <DialogTitle>\r\n                Выбери уровень сложности\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                <Box className={classes.image}>\r\n                    <GreenButton onClick={setEasyDifficult} variant=\"contained\" className={classes.margin}>\r\n                        Easy\r\n                    </GreenButton>\r\n                    <PurpleButton onClick={setNormalDifficult} variant=\"contained\" className={classes.margin}>\r\n                        Normal\r\n                    </PurpleButton>\r\n                    <RedButton onClick={setHardDifficult} variant=\"contained\" className={classes.margin}>\r\n                        Hard\r\n                    </RedButton>\r\n                </Box>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default DifficultDialog;","import Dialog from \"@material-ui/core/Dialog\";\r\nimport {DialogActions, DialogContent, DialogTitle} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React from \"react\";\r\n\r\nconst KeyLayoutDialog = ({handleClose, open}) => {\r\n    return (\r\n        <Dialog disableEscapeKeyDown open={open}>\r\n            <DialogTitle onClose={handleClose}>\r\n                Смените раскладку\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                <Typography gutterBottom style={{fontSize: '18px'}}>\r\n                    Обнаружена неправильная раскладка клавиатуры. Пожалуйста, переключитесь на латинскую раскладку\r\n                    клавиатуры.\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                    Ok!\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n    );\r\n}\r\n\r\nexport default KeyLayoutDialog;","import {useSelector} from \"react-redux\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {DialogActions, DialogContent, DialogTitle} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst FinalDialog = ({handleClose, open}) => {\r\n    const countErrors = useSelector(state => state.appState.countErrors);\r\n    const accuracy = useSelector(state => state.appState.accuracy);\r\n    const speed = useSelector(state => state.appState.speed);\r\n    const [finalSpeed, setFinalSpeed] = useState(speed);\r\n\r\n    const resultTextAll = {\r\n        awesome: {\r\n            title: 'Отлично!',\r\n            text: 'Ого, да ты настоящий профессионал! Только посмотри на свои результаты.',\r\n            button: 'Повторить успех'\r\n        },\r\n        good: {\r\n            title: 'Хорошо!',\r\n            text: 'Ты молодец, у тебя хороший результат, тренируйся больше и станешь настоящим профессионалом!',\r\n            button: 'Улучшить результат'\r\n        },\r\n        normal: {\r\n            title: 'Нормально',\r\n            text: 'Неплохо, но есть к чему стремиться. Рекомендую тренироваться чаще.',\r\n            button: 'Тренироваться снова'\r\n        },\r\n        bad: {\r\n            title: 'Плохо!',\r\n            text: 'Твой результат очень не очень. Но не отчаивайся, этот тренажер сделает из тебя настоящего профи! Продолжай тренироваться!',\r\n            button: 'Не останавливаться'\r\n        },\r\n        slowly: {\r\n            title: 'Слишком медленно!',\r\n            text: 'Ты печатал слишком медленно. Нужно набирать темп. Сделай еще несколько попыток, не торопись, но и не медли.',\r\n            button: 'Ускориться!'\r\n        }\r\n    }\r\n\r\n    const [resultTextOutput, setResultTextOutput] = useState(resultTextAll.awesome);\r\n\r\n    useEffect(() => {\r\n            setResultTextOutput(resultTextAll.awesome);\r\n\r\n            if (accuracy < 95) {\r\n                setResultTextOutput(resultTextAll.good);\r\n            }\r\n            if (accuracy < 90) {\r\n                setResultTextOutput(resultTextAll.normal);\r\n            }\r\n            if (accuracy < 85) {\r\n                setResultTextOutput(resultTextAll.bad);\r\n            }\r\n        },\r\n        [accuracy]);\r\n\r\n    useEffect(() => {\r\n        setFinalSpeed(speed);\r\n        if (speed < 90 && open) {\r\n            setResultTextOutput(resultTextAll.slowly);\r\n        }\r\n    }, [open]);\r\n\r\n\r\n    const results = JSON.parse(localStorage.getItem(\"results\"));\r\n    const difficult = useSelector(state => state.appState.difficultyGame);\r\n\r\n    const setResults = (accuracy, errors, speed, difficult) => {\r\n        let newResults;\r\n        const difficultToText = difficult === 1 ? 'Легкий' : difficult === 4 ? 'Нормальный' : 'Сложный';\r\n        if (results) {\r\n            newResults = [...results, {\r\n                accuracy,\r\n                errors,\r\n                speed,\r\n                difficult: difficultToText\r\n            }];\r\n        } else {\r\n            newResults = [{\r\n                accuracy,\r\n                errors,\r\n                speed,\r\n                difficult: difficultToText\r\n            }];\r\n        }\r\n        localStorage.setItem('results', JSON.stringify(newResults));\r\n    }\r\n\r\n    const setResultWithHandleClose = () => {\r\n        setResults(accuracy, countErrors, finalSpeed, difficult);\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <Dialog onClose={setResultWithHandleClose} open={open}>\r\n            <DialogTitle onClose={setResultWithHandleClose}>\r\n                {resultTextOutput.title}\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                <Typography gutterBottom style={{fontSize: '18px'}}>\r\n                    {resultTextOutput.text}\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogContent dividers>\r\n                <Typography gutterBottom style={{fontSize: '18px'}}>\r\n                    Твоя скорость: {finalSpeed} знаков в минуту. <br/>\r\n                    Точность твоих нажатий {accuracy}% <br/>\r\n                    Всего ошибок: {countErrors}\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button autoFocus onClick={setResultWithHandleClose} color=\"primary\">\r\n                    {resultTextOutput.button}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default FinalDialog;","import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {resetGame} from \"../redux/actions\";\r\nimport StartDialog from \"./dialogs/StartDialog\";\r\nimport DifficultDialog from \"./dialogs/DifficultDialog\";\r\nimport KeyLayoutDialog from \"./dialogs/KeyLayoutDialog\";\r\nimport FinalDialog from \"./dialogs/FinalDialog\";\r\n\r\nconst useStyles = makeStyles({\r\n    image: {\r\n        marginBottom: '8px'\r\n    },\r\n    margin: {\r\n        margin: '8px'\r\n    },\r\n});\r\n\r\nconst Dialogs = () => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState({\r\n        startDialog: true,\r\n        difficultDialog: false,\r\n        finalDialog: false,\r\n        keyLayoutDialog: false\r\n    });\r\n\r\n    const toggleModal = (modal) => {\r\n        setOpen(prev => ({\r\n            ...prev,\r\n            [modal]: !prev[modal]\r\n        }));\r\n    };\r\n\r\n    const currentChar = useSelector(state => state.appState.currentChar);\r\n    const allChars = useSelector(state => state.appState.allChars);\r\n    const layoutKeyCheck = useSelector(state => state.appState.layoutKeyCheck);\r\n    const reset = useSelector(state => state.appState.reset);\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentChar === allChars && allChars !== 0) {\r\n            toggleModal('finalDialog');\r\n        }\r\n    }, [currentChar]);\r\n\r\n    useEffect(() => {\r\n        if (reset) {\r\n            toggleModal('difficultDialog');\r\n        }\r\n    }, [reset]);\r\n\r\n    useEffect(() => {\r\n        if (!layoutKeyCheck) {\r\n            toggleModal('keyLayoutDialog');\r\n        }\r\n    }, [layoutKeyCheck]);\r\n\r\n    return (\r\n        <>\r\n            <StartDialog handleClose={() => {\r\n                toggleModal('startDialog');\r\n                toggleModal('difficultDialog');\r\n            }} open={open.startDialog} classes={classes}/>\r\n\r\n            <DifficultDialog handleClose={() => {\r\n                toggleModal('difficultDialog');\r\n            }} open={open.difficultDialog} classes={classes}/>\r\n\r\n            <KeyLayoutDialog handleClose={() => {\r\n                toggleModal('keyLayoutDialog');\r\n            }} open={open.keyLayoutDialog} classes={classes}/>\r\n\r\n            <FinalDialog handleClose={() => {\r\n                dispatch(resetGame());\r\n                toggleModal('finalDialog');\r\n            }} open={open.finalDialog} classes={classes}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React, {useEffect} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {Grid, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650\r\n\r\n    },\r\n    row: {\r\n        fontSize: '18px'\r\n    },\r\n    hideLastBorder: {\r\n        '&:last-child td, &:last-child th': {\r\n            border: 0,\r\n        },\r\n    },\r\n});\r\n\r\nconst ResultsTable = () => {\r\n    const classes = useStyles();\r\n    let results = JSON.parse(localStorage.getItem(\"results\"));\r\n    const reset = useSelector(state => state.appState.reset);\r\n    useEffect(() => {\r\n        results = JSON.parse(localStorage.getItem(\"results\"));\r\n    }, [reset]);\r\n\r\n    if (results) {\r\n        return (\r\n            <Grid item xs={12}>\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table} size=\"medium\" aria-label=\"a results table\">\r\n                        <TableHead>\r\n                            <TableRow className={classes.row}>\r\n                                <TableCell>Попытка №</TableCell>\r\n                                <TableCell align=\"right\">Сложность</TableCell>\r\n                                <TableCell align=\"right\">Точность</TableCell>\r\n                                <TableCell align=\"right\">Ошибок</TableCell>\r\n                                <TableCell align=\"right\">Скорость зн./мин.</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {results.map((row, index) => (\r\n                                <TableRow key={index} className={classes.hideLastBorder}>\r\n                                    <TableCell component=\"th\" scope=\"row\">  {index + 1} </TableCell>\r\n                                    <TableCell align=\"right\">{row.difficult}</TableCell>\r\n                                    <TableCell align=\"right\">{row.accuracy}%</TableCell>\r\n                                    <TableCell align=\"right\">{row.errors}</TableCell>\r\n                                    <TableCell align=\"right\">{row.speed}</TableCell>\r\n                                </TableRow>\r\n                            )).reverse()}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Grid>\r\n        )\r\n    }\r\n    return <Grid item xs={12}><Paper style={{padding: '16px', fontSize: '18px', fontWeight: '700'}}>Здесь отобразятся ваши попытки.</Paper></Grid>\r\n};\r\n\r\nexport default ResultsTable;","import React from 'react';\r\nimport {LinearProgress} from \"@material-ui/core\";\r\n\r\nconst Preloader = () => {\r\n    return <LinearProgress />;\r\n};\r\n\r\nexport default Preloader;","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    passed: {\r\n        color: '#00bb0985'\r\n    },\r\n    next: {\r\n        backgroundColor: '#00b377',\r\n        padding: '3px',\r\n        borderRadius: '4px',\r\n        color: '#fff'\r\n    },\r\n    errored: {\r\n        backgroundColor: '#ff4646',\r\n        padding: '3px',\r\n        borderRadius: '4px',\r\n        color: '#fff'\r\n    }\r\n});\r\n\r\n\r\nconst Char = ({id, char}) => {\r\n    const classes = useStyles();\r\n    const [className, setClassName] = useState('default');\r\n    const erroredChar = useSelector(state => state.appState.erroredChar);\r\n    const passedChar = useSelector(state => state.appState.passedChar);\r\n    const currentChar = useSelector(state => state.appState.currentChar);\r\n\r\n    useEffect(() => {\r\n        if (currentChar === id) {\r\n            setClassName(classes.next);\r\n        }\r\n        if (erroredChar === id) {\r\n            setClassName(classes.errored);\r\n        }\r\n        if (passedChar === id) {\r\n            setClassName(classes.passed);\r\n        }\r\n    }, [currentChar, erroredChar])\r\n\r\n    return (\r\n        <span id={id} className={className}>{char}</span>\r\n    );\r\n};\r\n\r\nexport default Char;","import {useDispatch, useSelector} from \"react-redux\";\r\nimport React, {useEffect} from \"react\";\r\nimport {\r\n    fetchText, layoutKeyCheck,\r\n    resetGame,\r\n    setAllChars,\r\n    setCurrentChar,\r\n    setErroredChar,\r\n    setPassedChar\r\n} from \"../redux/actions\";\r\nimport Preloader from \"./Preloader\";\r\nimport Char from \"./Char\";\r\n\r\n\r\nconst keyPressedEqualToText = (key, char) => {\r\n        return key === char;\r\n}\r\n\r\nconst checkKeyboard = (e)=>{\r\n    if (e.code === \"Space\"){\r\n        return true;\r\n    }\r\n   const regex = /\\d|\\w|[\\.\\$@\\*\\\\\\/\\+\\-\\^\\!\\(\\)\\[\\]\\~\\%\\&\\=\\?\\>\\<\\{\\}\\\"\\'\\,\\`\\:\\;\\_]/g;\r\n   const match = e.key.match(regex);\r\n   return match !== null;\r\n}\r\n\r\nfunction FetchedText() {\r\n    const dispatch = useDispatch();\r\n    const text = useSelector(state => state.appState.fetchedText).toString();\r\n    const difficulty = useSelector(state => state.appState.difficultyGame);\r\n    const showLoader = useSelector(state => state.appState.showLoader);\r\n    const erroredChar = useSelector(state => state.appState.erroredChar);\r\n    const currentChar = useSelector(state => state.appState.currentChar);\r\n    const allChars = useSelector(state => state.appState.allChars);\r\n\r\n\r\n    useEffect(() => {\r\n        if(difficulty){\r\n            dispatch(fetchText(difficulty));\r\n        }\r\n    }, [difficulty]);\r\n\r\n    useEffect(() => {\r\n        dispatch(setAllChars(text.length));\r\n    }, [text,resetGame]);\r\n\r\n    useEffect(() => {\r\n        const keyPressedListener = e => {\r\n            let keyPressed = e.key;\r\n            let char = text[currentChar];\r\n\r\n            if(currentChar === allChars){\r\n                return;\r\n            }\r\n\r\n            if(keyPressed === 'Shift' || keyPressed === 'Alt'){\r\n                return;\r\n            }\r\n\r\n            if(checkKeyboard(e)){\r\n                dispatch(layoutKeyCheck(true));\r\n            } else {\r\n               dispatch(layoutKeyCheck(false));\r\n            }\r\n\r\n            if (keyPressedEqualToText(keyPressed, char)) {\r\n                dispatch(setErroredChar(''));\r\n                dispatch(setPassedChar(currentChar));\r\n                dispatch(setCurrentChar(currentChar + 1));\r\n            } else {\r\n                dispatch(setErroredChar(currentChar));\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', keyPressedListener);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', keyPressedListener);\r\n        }\r\n    }, [currentChar, text, erroredChar,allChars]);\r\n\r\n\r\n    if (showLoader) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return text.split(\"\").map((char, indexChar) => {\r\n        return <Char key={indexChar} id={indexChar} char={char}/>\r\n    });\r\n}\r\n\r\nexport default FetchedText;","import {Box, Grid, Paper} from \"@material-ui/core\";\r\nimport FetchedText from \"./FetchedText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {resetGame} from \"../redux/actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    fetchTextContainer: {\r\n        fontSize: '21px',\r\n        lineHeight: '1.65',\r\n        letterSpacing: '3px'\r\n    },\r\n    paper: {\r\n        padding: '24px'\r\n    },\r\n    actionList: {\r\n        textAlign: 'right',\r\n        marginTop: '16px'\r\n    }\r\n});\r\n\r\nconst Text = () => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const isFetching = useSelector(state => state.appState.showLoader);\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Paper className={classes.paper}>\r\n                <Box className={classes.fetchTextContainer}>\r\n                    <FetchedText style={{fontSize: '20px', lineHeight: '1.65'}}/>\r\n                </Box>\r\n                <div className={classes.actionList}>\r\n                    <Button tabIndex=\"-1\"\r\n                            disabled={isFetching}\r\n                            onClick={() => {\r\n                                document.activeElement.blur();\r\n                                dispatch(resetGame());\r\n                            }}>Начать заново</Button>\r\n                </div>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Text;","import React from 'react';\r\nimport Alert from '@material-ui/core/Alert';\r\nimport {makeStyles} from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    commonAlert: {\r\n        minHeight: '56px',\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    }\r\n});\r\n\r\n\r\nconst CustomAlert = ({text, severity, style}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Alert className={classes.commonAlert} severity={severity} style={style}>\r\n            {text}\r\n        </Alert>\r\n    );\r\n};\r\n\r\nexport default CustomAlert;","import React, {useEffect} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport CustomAlert from \"./CustomAlert\";\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    paper: {\r\n        padding: '24px'\r\n    },\r\n});\r\n\r\n\r\nconst Hints = ({showAlert, showLoader, erroredChar, passedChar}) => {\r\n    if (showAlert) {\r\n        return <CustomAlert severity=\"error\"\r\n                            text=\"Не получилось загрузить текст. Убедитесь что интернет подключен и обновите страницу.\"/>\r\n    }\r\n\r\n    if (showLoader) {\r\n        return <CustomAlert severity=\"info\"\r\n                            text=\"Подождите, текст сейчас загрузится!\"/>\r\n    }\r\n\r\n    if (erroredChar) {\r\n        return <CustomAlert severity=\"error\"\r\n                            text=\"Упс! Ошибочка. Постарайся печатать внимательнее.\"/>\r\n    }\r\n\r\n    if (passedChar) {\r\n        return <CustomAlert severity=\"success\"\r\n                            text=\"Молодец! Продолжай в том же духе!\"/>\r\n    }\r\n\r\n    return <CustomAlert severity=\"warning\"\r\n                        text=\"Начните печатать, только не торопитесь. Старайтесь четко прожимать клавиши, не забудьте о правильном положении пальцев на клавиатуре. У вас все получится!\"/>\r\n}\r\n\r\n\r\nconst HintsContainer = () => {\r\n    const classes = useStyles();\r\n    const showLoader = useSelector(state => state.appState.showLoader);\r\n    const erroredChar = useSelector(state => state.appState.erroredChar);\r\n    const passedChar = useSelector(state => state.appState.passedChar);\r\n    const showAlert = useSelector(state => state.appState.showAlert);\r\n\r\n    useEffect(() => {\r\n    }, [showLoader, erroredChar, passedChar]);\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Paper className={classes.paper}>\r\n                <Hints {...{passedChar, erroredChar,showAlert, showLoader}}/>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default HintsContainer;","import {Grid, Paper, Typography} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    paper: {\r\n        padding: '24px'\r\n    },\r\n    h1: {\r\n        fontSize: '36px'\r\n    }\r\n});\r\n\r\nconst Title = ({text})=>{\r\n    const classes = useStyles();\r\n    return (\r\n            <Grid item xs={12}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h1\" className={classes.h1}>\r\n                        {text}\r\n                    </Typography>\r\n                </Paper>\r\n            </Grid>\r\n        )\r\n\r\n}\r\nexport default Title;\r\n\r\n","import {Box, Container, Grid, Hidden, StyledEngineProvider} from \"@material-ui/core\";\nimport Accuracy from \"./components/Accuracy\";\nimport Speedometer from \"./components/Speedometer\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport Dialogs from \"./components/Dialogs\";\nimport ResultsTable from \"./components/ResultsTable\";\nimport Text from \"./components/Text\";\nimport HintsContainer from \"./components/Hints\";\nimport Title from \"./components/Title\";\nimport {useRef} from \"react\";\n\nconst useStyles = makeStyles({\n    root: {\n        backgroundColor: '#f1f1f1',\n        minHeight: '100vh'\n    },\n    padding: {\n        padding: '40px 15px'\n    }\n});\n\nfunction App() {\n    const classes = useStyles();\n    const input = useRef(null);\n\n    return (\n        <StyledEngineProvider injectFirst>\n            <div className={classes.root} onClick={() => {\n                input.current.focus();\n            }}>\n                <Box style={{position: 'absolute', left: '-200%'}}>\n                    <input type=\"text\" ref={input}/>\n                </Box>\n                <Container maxWidth=\"md\" className={classes.padding}>\n                    <Grid container spacing={4}>\n\n                        <Title text=\"Тренажер слепой печати\"/>\n                        <HintsContainer/>\n                        <Text/>\n                        <Accuracy/>\n                        <Speedometer/>\n                        <ResultsTable/>\n\n                    </Grid>\n                </Container>\n\n                <Dialogs/>\n\n            </div>\n        </StyledEngineProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {call, put, takeEvery} from \"redux-saga/effects\"\r\nimport {FETCH_TEXT, REQUEST_TEXT} from \"./types\";\r\nimport {hideLoader, showAlert, showLoader} from \"./actions\";\r\n\r\nexport function* sagaWatcher() {\r\n    yield takeEvery(REQUEST_TEXT, sagaWorker);\r\n}\r\n\r\nfunction* sagaWorker(action) {\r\n    try {\r\n        yield put(showLoader());\r\n        const payload = yield call(fetchText, action);\r\n        yield put({type: FETCH_TEXT, payload});\r\n        yield put(hideLoader());\r\n    } catch (e) {\r\n        yield put(showAlert());\r\n        yield put(hideLoader());\r\n    }\r\n\r\n\r\n}\r\n\r\nasync function fetchText(action) {\r\n    const response = await fetch(`https://baconipsum.com/api/?type=all-meat&sentences=${action.difficult}&format=json`);\r\n    return response.json();\r\n}","import {\r\n    FETCH_TEXT,\r\n    HIDE_ALERT,\r\n    HIDE_LOADER, LAYOUT_KEY_CHECK,\r\n    SET_ACCURACY, SET_ALL_CHARS, SET_COUNT_ERRORS, SET_CURRENT_CHAR, SET_DIFFICULTY_GAME,\r\n    SET_ERRORED_CHAR,\r\n    SET_PASSED_CHAR, SET_SPEED, SET_START_GAME,\r\n    SHOW_ALERT,\r\n    SHOW_LOADER,\r\n\r\n} from \"./types\";\r\n\r\nconst initialState = {\r\n    // [\"Pork loin pork chop pig meatball burgdoggen strip steak. Pork chop sirloin bacon, alcatra pig tenderloin fatback jowl.\"]\r\n    fetchedText: '',\r\n    showLoader: true,\r\n    showAlert: false,\r\n    difficultyGame: 0,\r\n    erroredChar: null,\r\n    passedChar: null,\r\n    currentChar: 0,\r\n    countErrors: 0,\r\n    allChars: 0,\r\n    accuracy: 100.00,\r\n    speed: 0,\r\n    layoutKeyCheck: true,\r\n    reset: 0\r\n}\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_TEXT:\r\n            return {...state, fetchedText: action.payload}\r\n        case SHOW_LOADER:\r\n            return {...state, showLoader: true}\r\n        case SHOW_ALERT:\r\n            return {...state, showAlert: true}\r\n        case HIDE_LOADER:\r\n            return {...state, showLoader: false}\r\n        case HIDE_ALERT:\r\n            return {...state, showAlert: false}\r\n        case SET_DIFFICULTY_GAME:\r\n            return {...state, difficultyGame: action.difficult}\r\n        case SET_ERRORED_CHAR:\r\n            return {...state, erroredChar: action.key}\r\n        case SET_PASSED_CHAR:\r\n            return {...state, passedChar: action.key}\r\n        case SET_COUNT_ERRORS:\r\n            return {...state, countErrors: action.numb}\r\n        case SET_ALL_CHARS:\r\n            return {...state, allChars: action.numb}\r\n        case SET_ACCURACY:\r\n            return {...state, accuracy: action.percent}\r\n        case SET_SPEED:\r\n            return {...state, speed: action.speed}\r\n        case SET_CURRENT_CHAR:\r\n            return {...state, currentChar: action.key}\r\n        case LAYOUT_KEY_CHECK:\r\n            return {...state, layoutKeyCheck: action.bool}\r\n        case SET_START_GAME:\r\n            return {...initialState, reset: state.reset + 1\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default appReducer;\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport createSagaMiddleWare from \"redux-saga\";\r\nimport {sagaWatcher} from \"./sagas\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nconst saga = createSagaMiddleWare();\r\n\r\n\r\nlet reducers = combineReducers({\r\n    appState: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst enhancers = composeEnhancers(\r\n    applyMiddleware(saga)\r\n);\r\n\r\nconst store = createStore(reducers, enhancers);\r\n\r\nsaga.run(sagaWatcher);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nconst app = (\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}